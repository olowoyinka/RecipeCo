# Generated by Django 3.2.5 on 2021-07-23 16:18

import chef_management_app.models
import ckeditor.fields
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[(1, 'HOD'), (2, 'Chef'), (3, 'Regular')], default=1, max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ChefUser',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('chef_name', models.CharField(max_length=255)),
                ('phone_number', models.CharField(max_length=255)),
                ('image_url', models.ImageField(blank=True, null=True, upload_to=chef_management_app.models.filepath_chef)),
                ('join_date', models.DateTimeField(auto_now_add=True)),
                ('address_name', models.TextField()),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Continent',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('continent_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chef_management_app.continent')),
            ],
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('decription', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('method', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('ingredient', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('image_url', models.ImageField(blank=True, null=True, upload_to=chef_management_app.models.filepath_recipe)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('price', models.IntegerField()),
                ('address_name', models.TextField()),
                ('chefuser_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chef_management_app.chefuser')),
                ('continent_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chef_management_app.continent')),
                ('country_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chef_management_app.country')),
            ],
        ),
        migrations.CreateModel(
            name='RegularUser',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('image_url', models.ImageField(blank=True, null=True, upload_to=chef_management_app.models.filepath_user)),
                ('phone_number', models.CharField(max_length=255)),
                ('join_date', models.DateTimeField(auto_now_add=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RecipeSurvey',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.TextField()),
                ('question_one', models.TextField()),
                ('question_two', models.TextField()),
                ('question_three', models.TextField()),
                ('question_four', models.TextField()),
                ('question_five', models.TextField()),
                ('question_six', models.TextField()),
                ('question_seven', models.TextField()),
                ('question_eight', models.TextField()),
                ('question_nine', models.TextField()),
                ('question_ten', models.TextField()),
                ('recipe_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chef_management_app.recipe')),
                ('regularuser_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chef_management_app.regularuser')),
            ],
        ),
        migrations.CreateModel(
            name='RecipeRating',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('rating', models.IntegerField()),
                ('recipe_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chef_management_app.recipe')),
                ('regularuser_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chef_management_app.regularuser')),
            ],
        ),
        migrations.CreateModel(
            name='RecipeImages',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('url', models.ImageField(upload_to=chef_management_app.models.filepath_recipe_image)),
                ('recipe_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chef_management_app.recipe')),
            ],
        ),
        migrations.CreateModel(
            name='RecipeCommentary',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('show_comment', models.BooleanField(default=True)),
                ('recipe_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chef_management_app.recipe')),
                ('regularuser_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chef_management_app.regularuser')),
            ],
        ),
        migrations.AddField(
            model_name='chefuser',
            name='continent_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chef_management_app.continent'),
        ),
        migrations.AddField(
            model_name='chefuser',
            name='country_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chef_management_app.country'),
        ),
        migrations.CreateModel(
            name='ChefImages',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('url', models.ImageField(upload_to=chef_management_app.models.filepath_chef_image)),
                ('chefuser_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chef_management_app.chefuser')),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('message', models.TextField()),
                ('booking_date', models.DateTimeField(auto_now_add=True)),
                ('approved', models.BooleanField(default=False)),
                ('chefuser_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chef_management_app.chefuser')),
                ('regularuser_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chef_management_app.regularuser')),
            ],
        ),
        migrations.CreateModel(
            name='AdminHOD',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
